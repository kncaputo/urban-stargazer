[{"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/index.js":"1","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/App/index.jsx":"2","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Discover/index.jsx":"3","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Header/index.jsx":"4","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Saved/index.jsx":"5","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Home/index.jsx":"6","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Card/index.jsx":"7","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/SavedModal/index.jsx":"8","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/utilities/utilities.js":"9","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/apiCalls.js":"10","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Saved/modalStyles.js":"11","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Footer/index.jsx":"12","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Home/homeText.js":"13"},{"size":313,"mtime":1610726170558,"results":"14","hashOfConfig":"15"},{"size":750,"mtime":1617654869524,"results":"16","hashOfConfig":"15"},{"size":3447,"mtime":1617654869525,"results":"17","hashOfConfig":"15"},{"size":708,"mtime":1611028395580,"results":"18","hashOfConfig":"15"},{"size":1919,"mtime":1617648468861,"results":"19","hashOfConfig":"15"},{"size":950,"mtime":1617655600814,"results":"20","hashOfConfig":"15"},{"size":479,"mtime":1617308117671,"results":"21","hashOfConfig":"15"},{"size":1456,"mtime":1611028395586,"results":"22","hashOfConfig":"15"},{"size":386,"mtime":1610995827690,"results":"23","hashOfConfig":"15"},{"size":334,"mtime":1611028395586,"results":"24","hashOfConfig":"15"},{"size":286,"mtime":1611028395584,"results":"25","hashOfConfig":"15"},{"size":380,"mtime":1617654355984,"results":"26","hashOfConfig":"15"},{"size":372,"mtime":1617655600814,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14m6swu",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/index.js",[],["56","57"],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/App/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Discover/index.jsx",["58"],"import React, { useEffect, useState } from 'react';\nimport { fetchPictureFromDate } from '../apiCalls';\nimport { BsStar, BsFillStarFill } from 'react-icons/bs';\nimport { IconContext } from 'react-icons/lib';\nimport { saveToLocalStorage, filterData } from '../utilities/utilities';\nimport './Discover.scss';\n\nconst Discover = () => {\n  const [image, setImage] = useState({});\n  const [isSaved, setIsSaved] = useState(false);\n\n  const { title, url, date } = image;\n\n  useEffect(() => {\n    generateRandomImage();\n  }, []);\n\n  const generateRandomImage = () => {\n    const date = generateRandomDate();\n\n    setIsSaved(false);\n    fetchPictureFromDate(date)\n    .then(data => {\n      const image = filterData(data);\n      setImage(image);\n    })\n    .catch(error => console.log(error))\n  }\n\n  const generateRandomDate = () => {\n    const year = `20${getRandomValue(20)}`;\n    const month = `${getRandomValue(12)}`\n    const day = `${getRandomValue(28)}`\n\n    return `${year}-${month}-${day}`;\n  }\n\n  const getRandomValue = (multiple) => {\n    let value = Math.floor((Math.random() *  multiple) + 1)\n    value = value.toString();\n\n    if (value.length < 2) {\n      value = '0' + value;\n    }\n    return value;\n  }\n\n  const handleDiscoverClick = () => {\n    generateRandomImage();\n  }\n\n  const retrieveFromLocalStorage = () => {\n    const retrievedImages = localStorage.getItem('savedImages')\n    return JSON.parse(retrievedImages)\n  }\n\n  const handleToggleSave = () => {\n    isSaved === false ? saveImage() : removeFromSaved();\n  }\n\n  const saveImage = () => {\n    let imagesToSave = [];\n    \n    const images = retrieveFromLocalStorage();\n    if (images) {\n      imagesToSave.push(images) \n    }\n    imagesToSave.push(image)\n    imagesToSave = imagesToSave.flat();\n\n    saveToLocalStorage(imagesToSave);\n    setIsSaved(true);\n  }\n\n  const removeFromSaved = () => {\n    const { date } = image;\n    const images = retrieveFromLocalStorage();\n\n    const newSavedImages = images.filter(savedImage => {\n      return savedImage.date !== date;\n    })\n    saveToLocalStorage(newSavedImages);\n    setIsSaved(false);\n  }\n\n  return(\n    <IconContext.Provider value={{ color: 'white' }}>\n      <main id='discover-main'>\n        <section id='image-box'>\n          <img src={`${url}`} id='image' alt={`${title} from ${date}`}/>\n        </section>\n\n        <h2 id='image-title'>{`${image.title}`}</h2>\n\n        <section id='button-box'>\n          {isSaved === false ? \n            <BsStar className='media-icons icon' size={27} onClick={() => {handleToggleSave()}} alt='Save image' data-testid='save-icon'/> :\n            <BsFillStarFill className='media-icons icon' size={27} onClick={() => {handleToggleSave()}} alt='Remove from Saved' />\n          }\n          <button className='media-icons' id='discover-button' onClick={() => {handleDiscoverClick()}} data-testid='discover-again'>Discover Again</button>\n        </section>\n\n        <section className='explanation-box'>\n          <p id='explanation'>{`${image.explanation}`}</p>\n        </section>\n      </main>\n    </IconContext.Provider>\n  ) \n}\n\nexport default Discover;","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Header/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Saved/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Home/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Card/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/SavedModal/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/utilities/utilities.js",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/apiCalls.js",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Saved/modalStyles.js",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Footer/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Home/homeText.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":16,"column":6,"nodeType":"65","endLine":16,"endColumn":8,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateRandomImage'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [generateRandomImage]",{"range":"72","text":"73"},[516,518],"[generateRandomImage]"]
[{"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/index.js":"1","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/reportWebVitals.js":"2","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/App/index.jsx":"3","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/apiCalls.js":"4","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Discover/index.jsx":"5","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Header/index.jsx":"6","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Saved/index.jsx":"7","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Home/index.jsx":"8","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Card/index.jsx":"9","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/utilities.jsx":"10","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/SavedModal/index.jsx":"11"},{"size":313,"mtime":1610726170558,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610562404973,"results":"14","hashOfConfig":"13"},{"size":520,"mtime":1610832277895,"results":"15","hashOfConfig":"13"},{"size":608,"mtime":1610817182578,"results":"16","hashOfConfig":"13"},{"size":3086,"mtime":1610832277898,"results":"17","hashOfConfig":"13"},{"size":494,"mtime":1610817182576,"results":"18","hashOfConfig":"13"},{"size":2576,"mtime":1610907638495,"results":"19","hashOfConfig":"13"},{"size":390,"mtime":1610817182577,"results":"20","hashOfConfig":"13"},{"size":308,"mtime":1610902464933,"results":"21","hashOfConfig":"13"},{"size":406,"mtime":1610832277900,"results":"22","hashOfConfig":"13"},{"size":731,"mtime":1610907943713,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"14m6swu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/index.js",[],["51","52"],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/reportWebVitals.js",[],["53","54"],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/App/index.jsx",["55","56"],"import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from '../Home';\nimport Header from '../Header';\nimport Discover from '../Discover';\nimport Saved from '../Saved';\nimport './App.scss';\n\nconst App = () => {\n\n  return(\n    <main id='app-main'>\n      <Header />\n      <Route exact path='/home' component={Home} />\n      <Route exact path='/discover' component={Discover} /> \n      <Route exact path='/saved' component={Saved} />\n    </main>\n  )\n}\n\nexport default App;","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/apiCalls.js",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Discover/index.jsx",["57","58","59","60","61","62","63"],"import React, { useEffect, useState, useParams } from 'react';\nimport { fetchPicturePicturesFromRange, fetchPictureFromDate } from '../apiCalls';\nimport { EmailShareButton, FacebookShareButton, TwitterShareButton } from \"react-share\";\nimport './Discover.scss';\n\nconst Discover = (props) => {\n  const [image, setImage] = useState({});\n\n  useEffect(() => {\n    generateRandomImage();\n  }, []);\n\n  const generateRandomImage = () => {\n    const date = generateRandomDate();\n\n    fetchPictureFromDate(date)\n    .then(image => setImage(image))\n    .catch(error => console.log(error))\n  }\n\n  const generateRandomDate = () => {\n    const year = `20${getRandomValue(20)}`;\n    const month = `${getRandomValue(12)}`\n    const day = `${getRandomValue(28)}`\n\n    return `${year}-${month}-${day}`;\n  }\n\n  // date function\n  const getRandomValue = (multiple) => {\n    let value = Math.floor((Math.random() *  multiple) + 1)\n    value = value.toString();\n\n    if (value.length < 2) {\n      value = '0' + value;\n    }\n    return value;\n  }\n\n  const handleDiscoverClick = () => {\n    generateRandomImage();\n  }\n\n  const saveToStorage = (image) => {\n    let imagesToSave = [];\n    const retrievedImages = localStorage.getItem('savedImages')\n    const images = JSON.parse(retrievedImages)\n    if (images) {\n      imagesToSave.push(images) \n    }\n    imagesToSave.push(image)\n\n    localStorage.clear();\n    let stringifiedImages = JSON.stringify(imagesToSave.flat());\n    localStorage.setItem('savedImages', stringifiedImages);\n  }\n\n  const share = () => {\n\n  }\n\n  return(\n    <main>\n      <section id='image-box'>\n        <img src={`${image.url}`} id='image' />\n      </section>\n\n      <h2 id='image-title'>{`${image.title}`}</h2>\n      <button onClick={() => {handleDiscoverClick()}}>Discover Again</button>\n\n      <section id='button-box'>\n        {/* <EmailShareButton \n          url={image.url} \n          id='email-share-button'\n          size={32} \n          round={true}\n          iconFillColor='white' /> */}\n        <button className='media-buttons' onClick={() => {share()}}>Share</button>\n        <button className='media-buttons' onClick={() => {saveToStorage(image)}}>Save Image</button>\n      </section>\n\n\n      <section>\n        <p id='explanation'>{`${image.explanation}`}</p>\n      </section>    \n    </main>\n  ) \n}\n\nexport default Discover;","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Header/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Saved/index.jsx",["64"],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Home/index.jsx",["65","66","67","68"],"import React, { Component, useEffect, useState } from 'react';\nimport background from '../assets/hubble-stars.jpg'\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n\n  return (\n    <main id='home-main'>\n      <h1>Welcome to Urban Stargazer</h1>\n      <Link to='/discover'> \n        <button>Click for random image</button>\n      </Link>  \n    </main>\n  )\n}\n\nexport default Home;","/Users/karacaputo/turing/3module/projects/urban-stargazer/src/Card/index.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/utilities.jsx",[],"/Users/karacaputo/turing/3module/projects/urban-stargazer/src/SavedModal/index.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"80","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":47},{"ruleId":"75","severity":1,"message":"81","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":39},{"ruleId":"75","severity":1,"message":"82","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":26},{"ruleId":"75","severity":1,"message":"83","line":3,"column":28,"nodeType":"77","messageId":"78","endLine":3,"endColumn":47},{"ruleId":"75","severity":1,"message":"84","line":3,"column":49,"nodeType":"77","messageId":"78","endLine":3,"endColumn":67},{"ruleId":"85","severity":1,"message":"86","line":12,"column":6,"nodeType":"87","endLine":12,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":89,"column":9,"nodeType":"91","endLine":89,"endColumn":48},{"ruleId":"75","severity":1,"message":"92","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":30},{"ruleId":"75","severity":1,"message":"93","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"94","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":20},{"ruleId":"75","severity":1,"message":"95","line":5,"column":22,"nodeType":"77","messageId":"78","endLine":5,"endColumn":35},{"ruleId":"75","severity":1,"message":"96","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":12},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useParams' is defined but never used.","'fetchPicturePicturesFromRange' is defined but never used.","'EmailShareButton' is defined but never used.","'FacebookShareButton' is defined but never used.","'TwitterShareButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateRandomImage'. Either include it or remove the dependency array.","ArrayExpression",["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fetchPictureFromDate' is defined but never used.","'Component' is defined but never used.","'todayImage' is assigned a value but never used.","'getTodayImage' is assigned a value but never used.","'useEffect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [generateRandomImage]",{"range":"102","text":"103"},[450,452],"[generateRandomImage]"]